@mixin transition($transition...) {
	-moz-transition:    $transition;
	-o-transition:      $transition;
	-webkit-transition: $transition;
	transition:         $transition;
}

@mixin transition-property($property...) {
	-moz-transition-property:    $property;
	-o-transition-property:      $property;
	-webkit-transition-property: $property;
	transition-property:         $property;
}

@mixin transition-duration($duration...) {
	-moz-transition-property:    $duration;
	-o-transition-property:      $duration;
	-webkit-transition-property: $duration;
	transition-property:         $duration;
}

@mixin transition-timing-function($timing...) {
	-moz-transition-timing-function:    $timing;
	-o-transition-timing-function:      $timing;
	-webkit-transition-timing-function: $timing;
	transition-timing-function:         $timing;
}

@mixin transition-delay($delay...) {
	-moz-transition-delay:    $delay;
	-o-transition-delay:      $delay;
	-webkit-transition-delay: $delay;
	transition-delay:         $delay;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow:	inset $top $left $blur $color;
			-moz-box-shadow: 	inset $top $left $blur $color;
					box-shadow: 	inset $top $left $blur $color;
	} @else {
		-webkit-box-shadow: 	$top $left $blur $color;
			-moz-box-shadow: 	$top $left $blur $color;
				box-shadow: 	$top $left $blur $color;
	}
}

// generic transform
@mixin transform($transforms) {
	 -moz-transform: $transforms;
		 -o-transform: $transforms;
		-ms-transform: $transforms;
-webkit-transform: $transforms;
				transform: $transforms;
}

// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

// rotateY
@mixin rotateY ($deg) {
	@include transform(rotateY(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
}

// scale3d
@mixin scale3d($sx, $sy, $sz) {
	@include transform(scale3d($sx, $sy, $sz));
}

// translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}
// transform origin
@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

// disable user select
@mixin no-select {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

// Push auto
@mixin push--auto {
	margin: {
			left: auto;
			right: auto;
	}
}

// Placeholders
@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}
